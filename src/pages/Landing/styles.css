#page-landing {
    width: 100vw;
    height: 100vh;

    display: flex;
    justify-content: center;
    align-items: center;

    color: var(--color-text-in-primary);
    background: var(--color-primary);
}

.logo-container img {
    height: 10rem;
}

.hero-image {
    width: 100%;
}

.logo-container {
    text-align: center;
    margin-bottom: 3.2rem;
}

.logo-container h2 {
    font-weight: 500;
    font-size: 2.4rem;
    line-height: 4.6rem;
    margin-top: 0.8rem;
}

.buttons-container {
    display: flex;
    justify-content: center;
    margin: 3.2rem 0;
}

.buttons-container a {
    width: 30rem;
    height: 10.4rem;
    border-radius: 0.8rem;
    font: 700 2.0rem Archivo;

    display: flex;
    align-items: center;
    justify-content: center;

    text-decoration: none;
    color: var(--color-button-text);

    transition: background-color 0.2s;

}

.buttons-container a:first-child {
    margin-right: 1.6rem;
}

.buttons-container a img {
    width: 4rem;
}

.buttons-container a.study {
    background: var(--color-primary-lighter);
}

.buttons-container a.give-classes {
    background: var(--color-secundary);
}


.buttons-container a.study:hover {
    background: var(--color-primary-light);
}

.buttons-container a.give-classes:hover {
    background: var(--color-secundary-dark);
}

.buttons-container a img {
    margin-right: 2.4rem;
}

.total-connections {
    font-size: 1.4rem;
    
    display: flex;
    align-items: center;
    justify-content: center;
}

.total-connections img {
    margin-left: 0.8rem;
}

/* todo código acima, foi feito pensando em mobile first pq faz muito mais sentido */
/* o código abaixo, servirá para a aplicação ficar legal no desktop tambem! uhul */
/* a partir dos 1100 px o que eu vou fazer.. */
/* o display grid mostra onde cada elemento precisa se posicionar na tela <3*/
/* grid-template-rows é o espaço que cada linha vai ocupar */
/* grid-template-columns é a divisão de cada coluna, por ex aqui eu quero que a primeira coluna seja maior que as outras duas */
/* grid-template-areas eu falo o que vai ficar em cada lugar */
/* em baixo de tudo isso, em grid area eu coloco onde cada classe vai ficar */
/* importante fazer algumas alterações como tamanho de fonte, margem e etc para adptar o mobile ao desktop */

@media (min-width: 1100px) {
    #page-landing-content {
        max-width: 1100px;

        display: grid; 
        grid-template-rows: 350px 1fr;
        grid-template-columns: 2fr 1fr 1fr;
        grid-template-areas: 
            "logo hero hero"
            "buttons buttons total"
        ;
        
    }

    .logo-container {
        grid-area: logo;
        align-self: center;
        text-align: left;
        margin: 0;
    }

    .logo-container h2 {
        text-align: initial;
        font-size: 3.6rem;
    }

    .logo-container img {
        height: 100%;
    }

    .hero-image {
        grid-area: hero;
        justify-self: end;
    }
    
    .buttons-container {
        grid-area: buttons;
        justify-content: flex-start;
    }

    .buttons-container a {
        font-size: 2.4rem;
    }

    .total-connections {
        grid-area: total;
        justify-self: end;
    }

}